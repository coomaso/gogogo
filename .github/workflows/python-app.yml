name: 宜昌市信用数据自动采集

on:
  schedule:
    - cron: '0 21 * * *'  # 每天UTC时间20:00运行（北京时间次日04:00）
    
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  data-collect:
    runs-on: ubuntu-latest

    steps:
    - name: 检出代码
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install pycryptodome==3.19.1 requests==2.31.0 openpyxl==3.1.2

    - name: 执行数据采集
      id: export
      run: |
        # 生成北京时间时间戳并设置为输出变量
        ts=$(TZ='Asia/Shanghai' date +%Y%m%d%H%M)
        echo "ts=${ts}" >> $GITHUB_OUTPUT

        # 清理历史输出文件
        mkdir -p excel_output
        # find excel_output/ -maxdepth 1 -type f \( -name "*.xlsx" -o -name "*.json" \) -delete
        find excel_output/ -maxdepth 1 -type f -name "*.xlsx" -delete
        # 执行主脚本
        python3 main.py

        # 查找输出文件
        original_file=$(ls excel_output/*.xlsx | head -n 1)
        new_file="excel_output/宜昌市信用数据_${ts}.xlsx"
        [ -f "$original_file" ] && mv "$original_file" "$new_file"

        # 验证文件生成成功
        if [ ! -f "$new_file" ]; then
            echo "::error:: 文件生成失败"
            exit 1
        fi

        echo "file-path=${new_file}" >> $GITHUB_OUTPUT

    - name: 上传数据文件
      uses: actions/upload-artifact@v4
      with:
        name: enterprise-data
        path: ${{ steps.export.outputs.file-path }}
        retention-days: 7

    - name: 提交到仓库
      run: |
        # 配置 Git 身份
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"

        # 使用北京时间生成时间戳与目录
        ts="${{ steps.export.outputs.ts }}"
        filename=$(basename "${{ steps.export.outputs.file-path }}")
        month_dir=$(TZ='Asia/Shanghai' date +'%Y-%m')

        mkdir -p "historical_data/$month_dir"

        # 复制文件到历史目录
        cp "${{ steps.export.outputs.file-path }}" "historical_data/$month_dir/$filename"

        # 添加变更（如果有）
        git add .
        
        # 检查是否有实际变更再提交
        if git diff --cached --quiet; then
          echo "✅ 没有变更，跳过提交"
        else
          git commit -m "📊 信用数据更新 [${ts}]"
          git push origin main
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
